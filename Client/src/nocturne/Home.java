/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nocturne;

import com.sun.xml.internal.ws.commons.xmlutil.Converter;
import datapacket.Datapacket;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.Timer;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import java.io.FileInputStream;
import java.io.InputStream;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;
import java.util.concurrent.TimeUnit;

import javazoom.jl.decoder.JavaLayerException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author Theo
 */
public class Home extends javax.swing.JFrame {

    private String username;
    boolean musicPlaying = false;
    String previousSongChoice = "";
    AudioStream audioStream = null;

    Timer songTimer;
    int songLength;
    int incrementProgress;
    int currentProgress;

    public Home(String currentUsername) throws IOException, ClassNotFoundException {
        initComponents();

        this.username = currentUsername;
        RefreshAllFriendsList();
        RefreshFriendsRequestList();
        RefreshMySongs();
        RefreshPosts();
        RefreshActiveFriendsList();

        CardLayout card = (CardLayout) pnl_main.getLayout();
        card.show(pnl_main, "cardHome");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_toolbar = new javax.swing.JPanel();
        lbl_exit = new javax.swing.JLabel();
        lbl_title = new javax.swing.JLabel();
        pnl_main = new javax.swing.JPanel();
        pnl_home = new javax.swing.JPanel();
        pnl_homePanel = new javax.swing.JPanel();
        lbl_homeSelectMood = new javax.swing.JLabel();
        cbx_homeMood = new javax.swing.JComboBox<>();
        lbl_homePost = new javax.swing.JLabel();
        txt_homePost = new javax.swing.JTextField();
        lbl_homeNewsFeed = new javax.swing.JLabel();
        sp_homePosts = new javax.swing.JScrollPane();
        ta_homePosts = new javax.swing.JTextArea();
        btn_homePost = new javax.swing.JButton();
        lbl_homeClear = new javax.swing.JLabel();
        seperator1 = new javax.swing.JSeparator();
        seperator2 = new javax.swing.JSeparator();
        icon_pp = new javax.swing.JLabel();
        pnl_homeSideBar = new javax.swing.JPanel();
        btn_homeFriends = new javax.swing.JButton();
        btn_homeHome = new javax.swing.JButton();
        lbl_homeIcon = new javax.swing.JLabel();
        btn_homeLogOut = new javax.swing.JButton();
        btn_homeExit = new javax.swing.JButton();
        btn_homeMusic = new javax.swing.JButton();
        pnl_friends = new javax.swing.JPanel();
        pnl_friendsPanel = new javax.swing.JPanel();
        lbl_friendsAll = new javax.swing.JLabel();
        lbl_friendsActive = new javax.swing.JLabel();
        sp_friendsAll = new javax.swing.JScrollPane();
        list_friendsAll = new javax.swing.JList<>();
        sp_friendsActive = new javax.swing.JScrollPane();
        list_friendsActive = new javax.swing.JList<>();
        btn_friendsChat = new javax.swing.JButton();
        pnl_friendsProfile = new javax.swing.JPanel();
        lbl_friendsPP = new javax.swing.JLabel();
        lbl_friendsUsername = new javax.swing.JLabel();
        lbl_friendsName = new javax.swing.JLabel();
        lbl_friendsEmail = new javax.swing.JLabel();
        lbl_friendsInterests = new javax.swing.JLabel();
        lbl_friendRequests = new javax.swing.JLabel();
        sp_friendsRequests = new javax.swing.JScrollPane();
        list_friendsRequests = new javax.swing.JList<>();
        btn_friendsAccept = new javax.swing.JButton();
        btn_friendsDecline = new javax.swing.JButton();
        btn_friendsFindUser = new javax.swing.JButton();
        btn_friendsRemove = new javax.swing.JButton();
        btn_friendsProfile = new javax.swing.JButton();
        seperator4 = new javax.swing.JSeparator();
        pnl_friendsSideBar = new javax.swing.JPanel();
        btn_friendsFriends = new javax.swing.JButton();
        btn_friendsHome = new javax.swing.JButton();
        lbl_friendsIcon = new javax.swing.JLabel();
        btn_friendsLogOut = new javax.swing.JButton();
        btn_friendsExit = new javax.swing.JButton();
        btn_friendsMusic = new javax.swing.JButton();
        pnl_music = new javax.swing.JPanel();
        pnl_musicPanel = new javax.swing.JPanel();
        sp_musicYourMusic = new javax.swing.JScrollPane();
        list_musicYourMusic = new javax.swing.JList<>();
        lbl_musicYourMusic = new javax.swing.JLabel();
        pb_musicBar = new javax.swing.JProgressBar();
        btn_musicPP = new javax.swing.JButton();
        btn_musicUpload = new javax.swing.JButton();
        lbl_musicFriendSL = new javax.swing.JLabel();
        sp_musicFriendSL = new javax.swing.JScrollPane();
        list_musicFriendSL = new javax.swing.JList<>();
        sp_musicFriends = new javax.swing.JScrollPane();
        list_musicFriends = new javax.swing.JList<>();
        lbl_musicFriends = new javax.swing.JLabel();
        lbl_nowPlaying = new javax.swing.JLabel();
        lbl_songNowPlaying = new javax.swing.JLabel();
        icon_nowPlaying = new javax.swing.JLabel();
        pnl_musicSideBar = new javax.swing.JPanel();
        btn_musicFriends = new javax.swing.JButton();
        btn_musicHome = new javax.swing.JButton();
        lbl_musicIcon = new javax.swing.JLabel();
        btn_musicLogOut = new javax.swing.JButton();
        btn_musicExit = new javax.swing.JButton();
        btn_updatedMusic = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(400, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_toolbar.setBackground(new java.awt.Color(57, 113, 177));
        pnl_toolbar.setPreferredSize(new java.awt.Dimension(600, 30));
        pnl_toolbar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnl_toolbarMouseDragged(evt);
            }
        });
        pnl_toolbar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnl_toolbarMousePressed(evt);
            }
        });

        lbl_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nocturne/resources/cancel.png"))); // NOI18N
        lbl_exit.setPreferredSize(new java.awt.Dimension(30, 30));
        lbl_exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_exitMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_exitMousePressed(evt);
            }
        });

        lbl_title.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        lbl_title.setForeground(new java.awt.Color(255, 255, 255));
        lbl_title.setText("Music");

        javax.swing.GroupLayout pnl_toolbarLayout = new javax.swing.GroupLayout(pnl_toolbar);
        pnl_toolbar.setLayout(pnl_toolbarLayout);
        pnl_toolbarLayout.setHorizontalGroup(
            pnl_toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_toolbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_title, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 270, Short.MAX_VALUE)
                .addComponent(lbl_exit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnl_toolbarLayout.setVerticalGroup(
            pnl_toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_toolbarLayout.createSequentialGroup()
                .addGroup(pnl_toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_exit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(pnl_toolbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 30));

        pnl_main.setBackground(new java.awt.Color(7, 51, 73));
        pnl_main.setLayout(new java.awt.CardLayout());

        pnl_home.setBackground(new java.awt.Color(7, 51, 73));
        pnl_home.setPreferredSize(new java.awt.Dimension(600, 370));
        pnl_home.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_homePanel.setBackground(new java.awt.Color(7, 51, 73));
        pnl_homePanel.setPreferredSize(new java.awt.Dimension(450, 400));

        lbl_homeSelectMood.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_homeSelectMood.setForeground(new java.awt.Color(57, 113, 177));
        lbl_homeSelectMood.setText("Select A Mood:");

        cbx_homeMood.setBackground(new java.awt.Color(0, 102, 255));
        cbx_homeMood.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cbx_homeMood.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Happy", "Excited", "Stressed", "Relieved", "Sad", "Miserable", "Angry" }));

        lbl_homePost.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_homePost.setForeground(new java.awt.Color(57, 113, 177));
        lbl_homePost.setText("Enter A Post Here:");

        txt_homePost.setBackground(new java.awt.Color(7, 51, 73));
        txt_homePost.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txt_homePost.setForeground(new java.awt.Color(255, 255, 255));
        txt_homePost.setBorder(null);
        txt_homePost.setCaretColor(new java.awt.Color(255, 255, 255));

        lbl_homeNewsFeed.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_homeNewsFeed.setForeground(new java.awt.Color(57, 113, 177));
        lbl_homeNewsFeed.setText("News Feed:");

        sp_homePosts.setBackground(new java.awt.Color(46, 47, 47));
        sp_homePosts.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        ta_homePosts.setEditable(false);
        ta_homePosts.setBackground(new java.awt.Color(7, 51, 73));
        ta_homePosts.setColumns(20);
        ta_homePosts.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        ta_homePosts.setLineWrap(true);
        ta_homePosts.setRows(5);
        ta_homePosts.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sp_homePosts.setViewportView(ta_homePosts);

        btn_homePost.setBackground(new java.awt.Color(57, 113, 177));
        btn_homePost.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_homePost.setForeground(new java.awt.Color(255, 255, 255));
        btn_homePost.setText("Post");
        btn_homePost.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_homePost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_homePostActionPerformed(evt);
            }
        });

        lbl_homeClear.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_homeClear.setForeground(new java.awt.Color(57, 113, 177));
        lbl_homeClear.setText("or Clear");

        javax.swing.GroupLayout pnl_homePanelLayout = new javax.swing.GroupLayout(pnl_homePanel);
        pnl_homePanel.setLayout(pnl_homePanelLayout);
        pnl_homePanelLayout.setHorizontalGroup(
            pnl_homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_homePanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnl_homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_homePost)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbl_homePost)
                        .addGroup(pnl_homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(pnl_homePanelLayout.createSequentialGroup()
                                .addGroup(pnl_homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbx_homeMood, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_homeSelectMood))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(icon_pp, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_homePanelLayout.createSequentialGroup()
                                .addComponent(lbl_homeNewsFeed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_homePost, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbl_homeClear))
                            .addComponent(seperator2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sp_homePosts, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seperator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_homePanelLayout.setVerticalGroup(
            pnl_homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_homePanelLayout.createSequentialGroup()
                .addGroup(pnl_homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_homePanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_homeSelectMood)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbx_homeMood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_homePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(icon_pp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seperator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_homePost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_homePost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seperator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_homePost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_homeClear))
                    .addComponent(lbl_homeNewsFeed, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sp_homePosts, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pnl_home.add(pnl_homePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 370));

        pnl_homeSideBar.setBackground(new java.awt.Color(32, 33, 35));
        pnl_homeSideBar.setPreferredSize(new java.awt.Dimension(150, 370));

        btn_homeFriends.setBackground(new java.awt.Color(57, 113, 177));
        btn_homeFriends.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_homeFriends.setForeground(new java.awt.Color(255, 255, 255));
        btn_homeFriends.setText("Friends");
        btn_homeFriends.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_homeFriends.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_homeFriendsActionPerformed(evt);
            }
        });

        btn_homeHome.setBackground(new java.awt.Color(57, 113, 177));
        btn_homeHome.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_homeHome.setForeground(new java.awt.Color(255, 255, 255));
        btn_homeHome.setText("Home");
        btn_homeHome.setPreferredSize(new java.awt.Dimension(250, 25));

        lbl_homeIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nocturne/resources/nocturne_dark140.png"))); // NOI18N
        lbl_homeIcon.setText("jLabel1");
        lbl_homeIcon.setPreferredSize(new java.awt.Dimension(128, 128));

        btn_homeLogOut.setBackground(new java.awt.Color(57, 113, 177));
        btn_homeLogOut.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_homeLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btn_homeLogOut.setText("Log Out");
        btn_homeLogOut.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_homeLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_homeLogOutActionPerformed(evt);
            }
        });

        btn_homeExit.setBackground(new java.awt.Color(57, 113, 177));
        btn_homeExit.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_homeExit.setForeground(new java.awt.Color(255, 255, 255));
        btn_homeExit.setText("Exit");
        btn_homeExit.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_homeExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_homeExitActionPerformed(evt);
            }
        });

        btn_homeMusic.setBackground(new java.awt.Color(57, 113, 177));
        btn_homeMusic.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_homeMusic.setForeground(new java.awt.Color(255, 255, 255));
        btn_homeMusic.setText("Music");
        btn_homeMusic.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_homeMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_homeMusicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_homeSideBarLayout = new javax.swing.GroupLayout(pnl_homeSideBar);
        pnl_homeSideBar.setLayout(pnl_homeSideBarLayout);
        pnl_homeSideBarLayout.setHorizontalGroup(
            pnl_homeSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_homeSideBarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_homeSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_homeHome, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_homeFriends, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_homeMusic, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl_homeSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btn_homeLogOut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addComponent(btn_homeExit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
            .addGroup(pnl_homeSideBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_homeIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_homeSideBarLayout.setVerticalGroup(
            pnl_homeSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_homeSideBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_homeIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(btn_homeHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_homeFriends, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_homeMusic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btn_homeLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_homeExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pnl_home.add(pnl_homeSideBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 150, 370));

        pnl_main.add(pnl_home, "cardHome");

        pnl_friends.setPreferredSize(new java.awt.Dimension(600, 370));
        pnl_friends.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_friendsPanel.setBackground(new java.awt.Color(7, 51, 73));

        lbl_friendsAll.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_friendsAll.setForeground(new java.awt.Color(57, 113, 177));
        lbl_friendsAll.setText("All Friends:");

        lbl_friendsActive.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_friendsActive.setForeground(new java.awt.Color(57, 113, 177));
        lbl_friendsActive.setText("Active Friends:");

        sp_friendsAll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        list_friendsAll.setBackground(new java.awt.Color(7, 51, 73));
        list_friendsAll.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        list_friendsAll.setForeground(new java.awt.Color(255, 255, 255));
        sp_friendsAll.setViewportView(list_friendsAll);

        sp_friendsActive.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        list_friendsActive.setBackground(new java.awt.Color(7, 51, 73));
        list_friendsActive.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        list_friendsActive.setForeground(new java.awt.Color(255, 255, 255));
        sp_friendsActive.setViewportView(list_friendsActive);

        btn_friendsChat.setBackground(new java.awt.Color(57, 113, 177));
        btn_friendsChat.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_friendsChat.setForeground(new java.awt.Color(255, 255, 255));
        btn_friendsChat.setText("Chat");
        btn_friendsChat.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_friendsChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_friendsChatActionPerformed(evt);
            }
        });

        pnl_friendsProfile.setBackground(new java.awt.Color(7, 51, 73));
        pnl_friendsProfile.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Profile:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(57, 113, 177))); // NOI18N
        pnl_friendsProfile.setName("Profile:"); // NOI18N

        lbl_friendsUsername.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_friendsUsername.setForeground(new java.awt.Color(57, 113, 177));
        lbl_friendsUsername.setText("Username: ");

        lbl_friendsName.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_friendsName.setForeground(new java.awt.Color(57, 113, 177));
        lbl_friendsName.setText("Full Name: ");

        lbl_friendsEmail.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_friendsEmail.setForeground(new java.awt.Color(57, 113, 177));
        lbl_friendsEmail.setText("Email: ");

        lbl_friendsInterests.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_friendsInterests.setForeground(new java.awt.Color(57, 113, 177));
        lbl_friendsInterests.setText("Interests: ");

        javax.swing.GroupLayout pnl_friendsProfileLayout = new javax.swing.GroupLayout(pnl_friendsProfile);
        pnl_friendsProfile.setLayout(pnl_friendsProfileLayout);
        pnl_friendsProfileLayout.setHorizontalGroup(
            pnl_friendsProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_friendsProfileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_friendsProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_friendsUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnl_friendsProfileLayout.createSequentialGroup()
                        .addComponent(lbl_friendsPP, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lbl_friendsName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_friendsEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_friendsInterests, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnl_friendsProfileLayout.setVerticalGroup(
            pnl_friendsProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_friendsProfileLayout.createSequentialGroup()
                .addComponent(lbl_friendsPP, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_friendsUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_friendsName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_friendsEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_friendsInterests)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        lbl_friendRequests.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_friendRequests.setForeground(new java.awt.Color(57, 113, 177));
        lbl_friendRequests.setText("Friend Requests:");

        sp_friendsRequests.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        list_friendsRequests.setBackground(new java.awt.Color(7, 51, 73));
        list_friendsRequests.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        list_friendsRequests.setForeground(new java.awt.Color(255, 255, 255));
        sp_friendsRequests.setViewportView(list_friendsRequests);

        btn_friendsAccept.setBackground(new java.awt.Color(57, 113, 177));
        btn_friendsAccept.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_friendsAccept.setForeground(new java.awt.Color(255, 255, 255));
        btn_friendsAccept.setText("Accept");
        btn_friendsAccept.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_friendsAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_friendsAcceptActionPerformed(evt);
            }
        });

        btn_friendsDecline.setBackground(new java.awt.Color(57, 113, 177));
        btn_friendsDecline.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_friendsDecline.setForeground(new java.awt.Color(255, 255, 255));
        btn_friendsDecline.setText("Decline");
        btn_friendsDecline.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_friendsDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_friendsDeclineActionPerformed(evt);
            }
        });

        btn_friendsFindUser.setBackground(new java.awt.Color(57, 113, 177));
        btn_friendsFindUser.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_friendsFindUser.setForeground(new java.awt.Color(255, 255, 255));
        btn_friendsFindUser.setText("Find Users");
        btn_friendsFindUser.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_friendsFindUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_friendsFindUserActionPerformed(evt);
            }
        });

        btn_friendsRemove.setBackground(new java.awt.Color(57, 113, 177));
        btn_friendsRemove.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_friendsRemove.setForeground(new java.awt.Color(255, 255, 255));
        btn_friendsRemove.setText("Remove");
        btn_friendsRemove.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_friendsRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_friendsRemoveActionPerformed(evt);
            }
        });

        btn_friendsProfile.setBackground(new java.awt.Color(57, 113, 177));
        btn_friendsProfile.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_friendsProfile.setForeground(new java.awt.Color(255, 255, 255));
        btn_friendsProfile.setText("Profile");
        btn_friendsProfile.setPreferredSize(new java.awt.Dimension(250, 25));

        javax.swing.GroupLayout pnl_friendsPanelLayout = new javax.swing.GroupLayout(pnl_friendsPanel);
        pnl_friendsPanel.setLayout(pnl_friendsPanelLayout);
        pnl_friendsPanelLayout.setHorizontalGroup(
            pnl_friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_friendsPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnl_friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(seperator4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_friendsPanelLayout.createSequentialGroup()
                        .addGroup(pnl_friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnl_friendsPanelLayout.createSequentialGroup()
                                .addGroup(pnl_friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_friendsPanelLayout.createSequentialGroup()
                                        .addComponent(btn_friendsProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_friendsRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(sp_friendsAll, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_friendsAll))
                                .addGap(40, 40, 40))
                            .addGroup(pnl_friendsPanelLayout.createSequentialGroup()
                                .addComponent(pnl_friendsProfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(31, 31, 31)))
                        .addGroup(pnl_friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sp_friendsRequests, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_friendsActive, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_friendsChat, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sp_friendsActive, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_friendsFindUser, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_friendRequests)
                            .addGroup(pnl_friendsPanelLayout.createSequentialGroup()
                                .addComponent(btn_friendsAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(btn_friendsDecline, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        pnl_friendsPanelLayout.setVerticalGroup(
            pnl_friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_friendsPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnl_friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_friendsAll)
                    .addComponent(lbl_friendsActive))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sp_friendsActive, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(sp_friendsAll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(pnl_friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_friendsPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_friendsRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_friendsProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_friendsPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btn_friendsChat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(seperator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(pnl_friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl_friendsPanelLayout.createSequentialGroup()
                        .addComponent(lbl_friendRequests)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sp_friendsRequests, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_friendsAccept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_friendsDecline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_friendsFindUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnl_friendsProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_friends.add(pnl_friendsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 370));

        pnl_friendsSideBar.setBackground(new java.awt.Color(32, 33, 35));
        pnl_friendsSideBar.setPreferredSize(new java.awt.Dimension(150, 370));

        btn_friendsFriends.setBackground(new java.awt.Color(57, 113, 177));
        btn_friendsFriends.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_friendsFriends.setForeground(new java.awt.Color(255, 255, 255));
        btn_friendsFriends.setText("Friends");
        btn_friendsFriends.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_friendsFriends.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_friendsFriendsActionPerformed(evt);
            }
        });

        btn_friendsHome.setBackground(new java.awt.Color(57, 113, 177));
        btn_friendsHome.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_friendsHome.setForeground(new java.awt.Color(255, 255, 255));
        btn_friendsHome.setText("Home");
        btn_friendsHome.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_friendsHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_friendsHomeActionPerformed(evt);
            }
        });

        lbl_friendsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nocturne/resources/nocturne_dark140.png"))); // NOI18N
        lbl_friendsIcon.setText("jLabel1");
        lbl_friendsIcon.setPreferredSize(new java.awt.Dimension(128, 128));

        btn_friendsLogOut.setBackground(new java.awt.Color(57, 113, 177));
        btn_friendsLogOut.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_friendsLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btn_friendsLogOut.setText("Log Out");
        btn_friendsLogOut.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_friendsLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_friendsLogOutActionPerformed(evt);
            }
        });

        btn_friendsExit.setBackground(new java.awt.Color(57, 113, 177));
        btn_friendsExit.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_friendsExit.setForeground(new java.awt.Color(255, 255, 255));
        btn_friendsExit.setText("Exit");
        btn_friendsExit.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_friendsExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_friendsExitActionPerformed(evt);
            }
        });

        btn_friendsMusic.setBackground(new java.awt.Color(57, 113, 177));
        btn_friendsMusic.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_friendsMusic.setForeground(new java.awt.Color(255, 255, 255));
        btn_friendsMusic.setText("Music");
        btn_friendsMusic.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_friendsMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_friendsMusicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_friendsSideBarLayout = new javax.swing.GroupLayout(pnl_friendsSideBar);
        pnl_friendsSideBar.setLayout(pnl_friendsSideBarLayout);
        pnl_friendsSideBarLayout.setHorizontalGroup(
            pnl_friendsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_friendsSideBarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_friendsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_friendsHome, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_friendsFriends, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_friendsMusic, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl_friendsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btn_friendsLogOut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addComponent(btn_friendsExit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
            .addGroup(pnl_friendsSideBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_friendsIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_friendsSideBarLayout.setVerticalGroup(
            pnl_friendsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_friendsSideBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_friendsIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(btn_friendsHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_friendsFriends, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_friendsMusic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btn_friendsLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_friendsExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pnl_friends.add(pnl_friendsSideBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 150, 370));

        pnl_main.add(pnl_friends, "cardFriends");

        pnl_music.setPreferredSize(new java.awt.Dimension(600, 370));
        pnl_music.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_musicPanel.setBackground(new java.awt.Color(7, 51, 73));

        list_musicYourMusic.setBackground(new java.awt.Color(7, 51, 73));
        list_musicYourMusic.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        list_musicYourMusic.setForeground(new java.awt.Color(255, 255, 255));
        sp_musicYourMusic.setViewportView(list_musicYourMusic);

        lbl_musicYourMusic.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_musicYourMusic.setForeground(new java.awt.Color(57, 113, 177));
        lbl_musicYourMusic.setText("Your Music:");

        btn_musicPP.setBackground(new java.awt.Color(57, 113, 177));
        btn_musicPP.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_musicPP.setForeground(new java.awt.Color(255, 255, 255));
        btn_musicPP.setText("Play/Pause");
        btn_musicPP.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_musicPP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_musicPPActionPerformed(evt);
            }
        });

        btn_musicUpload.setBackground(new java.awt.Color(57, 113, 177));
        btn_musicUpload.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_musicUpload.setForeground(new java.awt.Color(255, 255, 255));
        btn_musicUpload.setText("Upload A Song");
        btn_musicUpload.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_musicUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_musicUploadActionPerformed(evt);
            }
        });

        lbl_musicFriendSL.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_musicFriendSL.setForeground(new java.awt.Color(57, 113, 177));
        lbl_musicFriendSL.setText("Friends Song List:");

        list_musicFriendSL.setBackground(new java.awt.Color(7, 51, 73));
        list_musicFriendSL.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        list_musicFriendSL.setForeground(new java.awt.Color(255, 255, 255));
        sp_musicFriendSL.setViewportView(list_musicFriendSL);

        list_musicFriends.setBackground(new java.awt.Color(7, 51, 73));
        list_musicFriends.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        list_musicFriends.setForeground(new java.awt.Color(255, 255, 255));
        sp_musicFriends.setViewportView(list_musicFriends);

        lbl_musicFriends.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_musicFriends.setForeground(new java.awt.Color(57, 113, 177));
        lbl_musicFriends.setText("Friends:");

        lbl_nowPlaying.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_nowPlaying.setForeground(new java.awt.Color(57, 113, 177));
        lbl_nowPlaying.setText("Now Playing:");

        lbl_songNowPlaying.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_songNowPlaying.setForeground(new java.awt.Color(57, 113, 177));

        icon_nowPlaying.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        icon_nowPlaying.setForeground(new java.awt.Color(57, 113, 177));

        javax.swing.GroupLayout pnl_musicPanelLayout = new javax.swing.GroupLayout(pnl_musicPanel);
        pnl_musicPanel.setLayout(pnl_musicPanelLayout);
        pnl_musicPanelLayout.setHorizontalGroup(
            pnl_musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_musicPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnl_musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pb_musicBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnl_musicPanelLayout.createSequentialGroup()
                        .addGroup(pnl_musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sp_musicYourMusic, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(lbl_musicYourMusic)
                            .addComponent(btn_musicPP, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addGroup(pnl_musicPanelLayout.createSequentialGroup()
                                .addGroup(pnl_musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnl_musicPanelLayout.createSequentialGroup()
                                        .addComponent(lbl_nowPlaying)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(lbl_songNowPlaying, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(icon_nowPlaying, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(25, 25, 25)
                        .addGroup(pnl_musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_musicFriends)
                            .addComponent(lbl_musicFriendSL)
                            .addComponent(sp_musicFriendSL, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(sp_musicFriends, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(btn_musicUpload, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))))
                .addGap(0, 20, Short.MAX_VALUE))
        );
        pnl_musicPanelLayout.setVerticalGroup(
            pnl_musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_musicPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnl_musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_musicYourMusic)
                    .addComponent(lbl_musicFriends))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_musicPanelLayout.createSequentialGroup()
                        .addComponent(sp_musicFriends, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_musicFriendSL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sp_musicFriendSL, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_musicPanelLayout.createSequentialGroup()
                        .addComponent(sp_musicYourMusic, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_musicPanelLayout.createSequentialGroup()
                                .addComponent(lbl_nowPlaying)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_songNowPlaying, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(icon_nowPlaying, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_musicUpload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_musicPP, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pb_musicBar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_music.add(pnl_musicPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 370));

        pnl_musicSideBar.setBackground(new java.awt.Color(32, 33, 35));
        pnl_musicSideBar.setPreferredSize(new java.awt.Dimension(150, 370));

        btn_musicFriends.setBackground(new java.awt.Color(57, 113, 177));
        btn_musicFriends.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_musicFriends.setForeground(new java.awt.Color(255, 255, 255));
        btn_musicFriends.setText("Friends");
        btn_musicFriends.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_musicFriends.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_musicFriendsActionPerformed(evt);
            }
        });

        btn_musicHome.setBackground(new java.awt.Color(57, 113, 177));
        btn_musicHome.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_musicHome.setForeground(new java.awt.Color(255, 255, 255));
        btn_musicHome.setText("Home");
        btn_musicHome.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_musicHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_musicHomeActionPerformed(evt);
            }
        });

        lbl_musicIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nocturne/resources/nocturne_dark140.png"))); // NOI18N
        lbl_musicIcon.setText("jLabel1");
        lbl_musicIcon.setPreferredSize(new java.awt.Dimension(128, 128));

        btn_musicLogOut.setBackground(new java.awt.Color(57, 113, 177));
        btn_musicLogOut.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_musicLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btn_musicLogOut.setText("Log Out");
        btn_musicLogOut.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_musicLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_musicLogOutActionPerformed(evt);
            }
        });

        btn_musicExit.setBackground(new java.awt.Color(57, 113, 177));
        btn_musicExit.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_musicExit.setForeground(new java.awt.Color(255, 255, 255));
        btn_musicExit.setText("Exit");
        btn_musicExit.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_musicExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_musicExitActionPerformed(evt);
            }
        });

        btn_updatedMusic.setBackground(new java.awt.Color(57, 113, 177));
        btn_updatedMusic.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_updatedMusic.setForeground(new java.awt.Color(255, 255, 255));
        btn_updatedMusic.setText("Music");
        btn_updatedMusic.setPreferredSize(new java.awt.Dimension(250, 25));

        javax.swing.GroupLayout pnl_musicSideBarLayout = new javax.swing.GroupLayout(pnl_musicSideBar);
        pnl_musicSideBar.setLayout(pnl_musicSideBarLayout);
        pnl_musicSideBarLayout.setHorizontalGroup(
            pnl_musicSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_musicSideBarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_musicSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_musicHome, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_musicFriends, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_updatedMusic, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl_musicSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btn_musicLogOut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addComponent(btn_musicExit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
            .addGroup(pnl_musicSideBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_musicIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_musicSideBarLayout.setVerticalGroup(
            pnl_musicSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_musicSideBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_musicIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(btn_musicHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_musicFriends, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_updatedMusic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btn_musicLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_musicExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pnl_music.add(pnl_musicSideBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 150, 370));

        pnl_main.add(pnl_music, "cardMusic");

        getContentPane().add(pnl_main, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 600, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pnl_toolbarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_toolbarMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_pnl_toolbarMouseDragged

    private void pnl_toolbarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_toolbarMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_pnl_toolbarMousePressed

    private void lbl_exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_exitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_lbl_exitMouseClicked

    private void btn_friendsChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_friendsChatActionPerformed
        Chat chat = new Chat();
        chat.setLocationRelativeTo(null);
        chat.setVisible(true);
    }//GEN-LAST:event_btn_friendsChatActionPerformed

    private void btn_friendsExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_friendsExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_friendsExitActionPerformed

    private void btn_homeExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_homeExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_homeExitActionPerformed

    private void btn_musicExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_musicExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_musicExitActionPerformed

    private void btn_friendsHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_friendsHomeActionPerformed
        CardLayout card = (CardLayout) pnl_main.getLayout();
        card.show(pnl_main, "cardHome");
    }//GEN-LAST:event_btn_friendsHomeActionPerformed

    private void btn_musicHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_musicHomeActionPerformed
        CardLayout card = (CardLayout) pnl_main.getLayout();
        card.show(pnl_main, "cardHome");
    }//GEN-LAST:event_btn_musicHomeActionPerformed

    private void btn_homeFriendsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_homeFriendsActionPerformed
        CardLayout card = (CardLayout) pnl_main.getLayout();
        card.show(pnl_main, "cardFriends");
    }//GEN-LAST:event_btn_homeFriendsActionPerformed

    private void btn_musicFriendsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_musicFriendsActionPerformed
        CardLayout card = (CardLayout) pnl_main.getLayout();
        card.show(pnl_main, "cardFriends");
    }//GEN-LAST:event_btn_musicFriendsActionPerformed

    private void btn_homeMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_homeMusicActionPerformed
        CardLayout card = (CardLayout) pnl_main.getLayout();
        card.show(pnl_main, "cardMusic");
    }//GEN-LAST:event_btn_homeMusicActionPerformed

    private void btn_friendsFriendsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_friendsFriendsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_friendsFriendsActionPerformed

    private void btn_friendsMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_friendsMusicActionPerformed
        CardLayout card = (CardLayout) pnl_main.getLayout();
        card.show(pnl_main, "cardMusic");
    }//GEN-LAST:event_btn_friendsMusicActionPerformed

    private void btn_friendsFindUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_friendsFindUserActionPerformed
        FindUser findUser = new FindUser(username);
        findUser.setLocationRelativeTo(null);
        findUser.setVisible(true);
    }//GEN-LAST:event_btn_friendsFindUserActionPerformed

    private void btn_musicUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_musicUploadActionPerformed

        UploadSong uploadSong = new UploadSong(username);
        uploadSong.setLocationRelativeTo(null);
        uploadSong.setVisible(true);
    }//GEN-LAST:event_btn_musicUploadActionPerformed

    private void btn_homePostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_homePostActionPerformed
        String PostMessage = txt_homePost.getText();
        String UserMood = cbx_homeMood.getSelectedItem().toString();
        ArrayList<String> PostDetails = new ArrayList();
        PostDetails.add(username);
        PostDetails.add("TextPost");
        PostDetails.add(PostMessage);
        PostDetails.add(UserMood);

        Datapacket NewPost = new Datapacket();

        NewPost.SetCommand("UPLOAD_POST");
        NewPost.SetArray(PostDetails);

        try {
            Socket MainServer = new Socket("localhost", 9090);

            ObjectOutputStream OutToServer = new ObjectOutputStream(MainServer.getOutputStream());
            ObjectInputStream FromServerStream = new ObjectInputStream(MainServer.getInputStream());

            OutToServer.writeObject(NewPost);

            Datapacket ServerReply = (Datapacket) FromServerStream.readObject();

            OutToServer.close();
            FromServerStream.close();
            //Update posts
            ClearPost();
            //RefreshPosts();
        } catch (IOException | ClassNotFoundException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btn_homePostActionPerformed

    private void btn_musicPPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_musicPPActionPerformed
        String songChoice = "";

        if (!(list_musicYourMusic.isSelectionEmpty())) {
            songChoice = list_musicYourMusic.getSelectedValue();
        } else if (!(list_musicFriendSL.isSelectionEmpty())) {
            songChoice = list_musicFriendSL.getSelectedValue();
        }
        //If song not same as previous song or empty choice 
        if (!(songChoice.equals(previousSongChoice)) && (songChoice != "")) {

            //if music already playing
            if (musicPlaying == true) {
                AudioPlayer.player.stop(audioStream);
            }
            downloadSong(songChoice);
            convertFile(songChoice);
            playSong();
            previousSongChoice = songChoice;
            musicPlaying = true;

            // Sets cover photo and song name
            lbl_songNowPlaying.setText(songChoice);
            icon_nowPlaying.setIcon(ResizeImage("media/albums" + songChoice + ".png"));

            // Calculates length of song using the formula:
            // Runtime = FileLength / (Sample Rate * Channels * Bits per sample /8)
            songLength = (audioStream.getLength() / ((44100 * 2 * 16) / 8));

            // Resets progress bar and timer counter
            pb_musicBar.setValue(0);
            pb_musicBar.setMaximum(songLength);
            currentProgress = 0;

            // Creates timer which runs action every second
            songTimer = new Timer(1000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    // Increases by 1 the current progress until it reaches the song length
                    currentProgress += 1;
                    if (currentProgress >= songLength) {
                        // When song length is reached timer is stopped
                        currentProgress = songLength;
                        ((Timer) e.getSource()).stop();
                    }
                    // Value of progress bar updated
                    pb_musicBar.setValue(currentProgress);
                }
            });
            songTimer.start();

        } else {
            if (musicPlaying == true) {
                // Pause
                AudioPlayer.player.stop(audioStream);
                songTimer.stop();
                musicPlaying = false;
            } else {
                // Play
                AudioPlayer.player.start(audioStream);
                songTimer.start();
                musicPlaying = true;
            }
        }
    }//GEN-LAST:event_btn_musicPPActionPerformed

    private void btn_homeLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_homeLogOutActionPerformed
        Logout();
    }//GEN-LAST:event_btn_homeLogOutActionPerformed

    private void btn_musicLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_musicLogOutActionPerformed
        Logout();
    }//GEN-LAST:event_btn_musicLogOutActionPerformed

    private void lbl_exitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_exitMousePressed
        Logout();
    }//GEN-LAST:event_lbl_exitMousePressed

    private void btn_friendsLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_friendsLogOutActionPerformed
        Logout();
    }//GEN-LAST:event_btn_friendsLogOutActionPerformed

    private void btn_friendsAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_friendsAcceptActionPerformed
        String SecondUser = list_friendsRequests.getSelectedValue();
        ArrayList<String> AcceptRequest = new ArrayList();
        AcceptRequest.add(username);
        AcceptRequest.add(SecondUser);

        Datapacket AcceptFriendRequest = new Datapacket();
        AcceptFriendRequest.SetCommand("ACCEPT_FRIEND_REQUEST");
        AcceptFriendRequest.SetArray(AcceptRequest);
        try {
            Socket MainServer = new Socket("localhost", 9090);

            ObjectOutputStream OutToServer = new ObjectOutputStream(MainServer.getOutputStream());
            ObjectInputStream FromServerStream = new ObjectInputStream(MainServer.getInputStream());

            OutToServer.writeObject(AcceptFriendRequest);

            Datapacket ServerReply = (Datapacket) FromServerStream.readObject();

            OutToServer.close();
            FromServerStream.close();
            RefreshAllFriendsList();
            RefreshFriendsRequestList();
        } catch (IOException | ClassNotFoundException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btn_friendsAcceptActionPerformed

    private void btn_friendsDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_friendsDeclineActionPerformed
        String SecondUser = list_friendsRequests.getSelectedValue();
        ArrayList<String> DeclineRequest = new ArrayList();
        DeclineRequest.add(username);
        DeclineRequest.add(SecondUser);

        Datapacket DeclineFriendRequest = new Datapacket();
        DeclineFriendRequest.SetCommand("DECLINE_FRIEND_REQUEST");
        DeclineFriendRequest.SetArray(DeclineRequest);
        try {
            Socket MainServer = new Socket("localhost", 9090);

            ObjectOutputStream OutToServer = new ObjectOutputStream(MainServer.getOutputStream());
            ObjectInputStream FromServerStream = new ObjectInputStream(MainServer.getInputStream());

            OutToServer.writeObject(DeclineFriendRequest);

            Datapacket ServerReply = (Datapacket) FromServerStream.readObject();

            OutToServer.close();
            FromServerStream.close();
            RefreshAllFriendsList();
            RefreshFriendsRequestList();
        } catch (IOException | ClassNotFoundException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btn_friendsDeclineActionPerformed

    private void btn_friendsRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_friendsRemoveActionPerformed
        String usernameToDelete = list_friendsAll.getSelectedValue();
        Datapacket DeleteUser = new Datapacket();
        DeleteUser.SetCommand("DFS");
        ArrayList<String> UsersToRemove = new ArrayList();
        UsersToRemove.add(username);
        UsersToRemove.add(usernameToDelete);
        DeleteUser.SetArray(UsersToRemove);

        try {
            Socket MainServer = new Socket("localhost", 9090);

            ObjectOutputStream OutToServer = new ObjectOutputStream(MainServer.getOutputStream());
            ObjectInputStream FromServerStream = new ObjectInputStream(MainServer.getInputStream());

            OutToServer.writeObject(DeleteUser);

            Datapacket ServerReply = (Datapacket) FromServerStream.readObject();

            OutToServer.close();
            FromServerStream.close();

            RefreshAllFriendsList();

        } catch (IOException | ClassNotFoundException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btn_friendsRemoveActionPerformed

    int xx;
    int xy;
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_friendsAccept;
    private javax.swing.JButton btn_friendsChat;
    private javax.swing.JButton btn_friendsDecline;
    private javax.swing.JButton btn_friendsExit;
    private javax.swing.JButton btn_friendsFindUser;
    private javax.swing.JButton btn_friendsFriends;
    private javax.swing.JButton btn_friendsHome;
    private javax.swing.JButton btn_friendsLogOut;
    private javax.swing.JButton btn_friendsMusic;
    private javax.swing.JButton btn_friendsProfile;
    private javax.swing.JButton btn_friendsRemove;
    private javax.swing.JButton btn_homeExit;
    private javax.swing.JButton btn_homeFriends;
    private javax.swing.JButton btn_homeHome;
    private javax.swing.JButton btn_homeLogOut;
    private javax.swing.JButton btn_homeMusic;
    private javax.swing.JButton btn_homePost;
    private javax.swing.JButton btn_musicExit;
    private javax.swing.JButton btn_musicFriends;
    private javax.swing.JButton btn_musicHome;
    private javax.swing.JButton btn_musicLogOut;
    private javax.swing.JButton btn_musicPP;
    private javax.swing.JButton btn_musicUpload;
    private javax.swing.JButton btn_updatedMusic;
    private javax.swing.JComboBox<String> cbx_homeMood;
    private javax.swing.JLabel icon_nowPlaying;
    private javax.swing.JLabel icon_pp;
    private javax.swing.JLabel lbl_exit;
    private javax.swing.JLabel lbl_friendRequests;
    private javax.swing.JLabel lbl_friendsActive;
    private javax.swing.JLabel lbl_friendsAll;
    private javax.swing.JLabel lbl_friendsEmail;
    private javax.swing.JLabel lbl_friendsIcon;
    private javax.swing.JLabel lbl_friendsInterests;
    private javax.swing.JLabel lbl_friendsName;
    private javax.swing.JLabel lbl_friendsPP;
    private javax.swing.JLabel lbl_friendsUsername;
    private javax.swing.JLabel lbl_homeClear;
    private javax.swing.JLabel lbl_homeIcon;
    private javax.swing.JLabel lbl_homeNewsFeed;
    private javax.swing.JLabel lbl_homePost;
    private javax.swing.JLabel lbl_homeSelectMood;
    private javax.swing.JLabel lbl_musicFriendSL;
    private javax.swing.JLabel lbl_musicFriends;
    private javax.swing.JLabel lbl_musicIcon;
    private javax.swing.JLabel lbl_musicYourMusic;
    private javax.swing.JLabel lbl_nowPlaying;
    private javax.swing.JLabel lbl_songNowPlaying;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JList<String> list_friendsActive;
    private javax.swing.JList<String> list_friendsAll;
    private javax.swing.JList<String> list_friendsRequests;
    private javax.swing.JList<String> list_musicFriendSL;
    private javax.swing.JList<String> list_musicFriends;
    private javax.swing.JList<String> list_musicYourMusic;
    private javax.swing.JProgressBar pb_musicBar;
    private javax.swing.JPanel pnl_friends;
    private javax.swing.JPanel pnl_friendsPanel;
    private javax.swing.JPanel pnl_friendsProfile;
    private javax.swing.JPanel pnl_friendsSideBar;
    private javax.swing.JPanel pnl_home;
    private javax.swing.JPanel pnl_homePanel;
    private javax.swing.JPanel pnl_homeSideBar;
    private javax.swing.JPanel pnl_main;
    private javax.swing.JPanel pnl_music;
    private javax.swing.JPanel pnl_musicPanel;
    private javax.swing.JPanel pnl_musicSideBar;
    private javax.swing.JPanel pnl_toolbar;
    private javax.swing.JSeparator seperator1;
    private javax.swing.JSeparator seperator2;
    private javax.swing.JSeparator seperator4;
    private javax.swing.JScrollPane sp_friendsActive;
    private javax.swing.JScrollPane sp_friendsAll;
    private javax.swing.JScrollPane sp_friendsRequests;
    private javax.swing.JScrollPane sp_homePosts;
    private javax.swing.JScrollPane sp_musicFriendSL;
    private javax.swing.JScrollPane sp_musicFriends;
    private javax.swing.JScrollPane sp_musicYourMusic;
    private javax.swing.JTextArea ta_homePosts;
    private javax.swing.JTextField txt_homePost;
    // End of variables declaration//GEN-END:variables

    public void ClearPost() {
        txt_homePost.setText("");
        cbx_homeMood.setSelectedIndex(0);
    }

    public void RefreshAllFriendsList() throws IOException, ClassNotFoundException {
        Socket MainServer = new Socket("localhost", 9090);

        ObjectOutputStream OutToServer = new ObjectOutputStream(MainServer.getOutputStream());
        ObjectInputStream FromServerStream = new ObjectInputStream(MainServer.getInputStream());

        Datapacket UserFriends = new Datapacket();
        //GET MY FRIENDS
        UserFriends.SetCommand("GET_FRIENDS");
        UserFriends.SetSingleData(username);

        OutToServer.writeObject(UserFriends);

        Datapacket ServerReply = (Datapacket) FromServerStream.readObject();

        ArrayList<String> AllUsersFriends = ServerReply.GetArray();

        OutToServer.close();
        FromServerStream.close();

        DefaultListModel AllFriends = new DefaultListModel();

        for (int i = 0; i < AllUsersFriends.size(); i++) {
            AllFriends.addElement(AllUsersFriends.get(i));

        }
        list_friendsAll.setModel(AllFriends);
    }

    public void RefreshActiveFriendsList() throws IOException, ClassNotFoundException {
        Socket MainServer = new Socket("localhost", 9090);

        ObjectOutputStream OutToServer = new ObjectOutputStream(MainServer.getOutputStream());
        ObjectInputStream FromServerStream = new ObjectInputStream(MainServer.getInputStream());

        Datapacket UserFriends = new Datapacket();
        //GET MY FRIENDS
        UserFriends.SetCommand("GET_ACTIVE_FRIENDS");
        UserFriends.SetSingleData(username);

        OutToServer.writeObject(UserFriends);

        Datapacket ServerReply = (Datapacket) FromServerStream.readObject();

        ArrayList<String> ActiveFriends = ServerReply.GetArray();

        OutToServer.close();
        FromServerStream.close();

        DefaultListModel MyActiveFriends = new DefaultListModel();

        for (int i = 0; i < ActiveFriends.size(); i++) {
            MyActiveFriends.addElement(ActiveFriends.get(i));

        }
        list_friendsActive.setModel(MyActiveFriends);
    }

    public void RefreshFriendsRequestList() throws IOException, ClassNotFoundException {
        Socket MainServer = new Socket("localhost", 9090);

        ObjectOutputStream OutToServer = new ObjectOutputStream(MainServer.getOutputStream());
        ObjectInputStream FromServerStream = new ObjectInputStream(MainServer.getInputStream());

        Datapacket UserFriends = new Datapacket();
        //GET MY FRIENDS
        UserFriends.SetCommand("GET_FRIEND_REQUESTS");
        UserFriends.SetSingleData(username);

        OutToServer.writeObject(UserFriends);

        Datapacket ServerReply = (Datapacket) FromServerStream.readObject();

        ArrayList<String> AllUsersFriends = ServerReply.GetArray();

        OutToServer.close();
        FromServerStream.close();

        DefaultListModel AllFriendRequests = new DefaultListModel();

        for (int i = 0; i < AllUsersFriends.size(); i++) {
            AllFriendRequests.addElement(AllUsersFriends.get(i));

        }
        list_friendsRequests.setModel(AllFriendRequests);
    }

    public void RefreshMySongs() throws IOException, ClassNotFoundException {
        Socket MainServer = new Socket("localhost", 9090);

        ObjectOutputStream OutToServer = new ObjectOutputStream(MainServer.getOutputStream());
        ObjectInputStream FromServerStream = new ObjectInputStream(MainServer.getInputStream());

        Datapacket UserFriends = new Datapacket();
        //GET MY FRIENDS
        UserFriends.SetCommand("GET_MY_SONGS");
        UserFriends.SetSingleData(username);

        OutToServer.writeObject(UserFriends);

        Datapacket ServerReply = (Datapacket) FromServerStream.readObject();

        ArrayList<String> MySongs = ServerReply.GetArray();

        OutToServer.close();
        FromServerStream.close();

        DefaultListModel MyUserSongs = new DefaultListModel();

        for (int i = 0; i < MySongs.size(); i++) {
            MyUserSongs.addElement(MySongs.get(i));

        }
        list_musicYourMusic.setModel(MyUserSongs);
    }

    public void RefreshPosts() throws IOException, ClassNotFoundException {

        Socket MainServer = new Socket("localhost", 9090);

        ObjectOutputStream OutToServer = new ObjectOutputStream(MainServer.getOutputStream());
        ObjectInputStream FromServerStream = new ObjectInputStream(MainServer.getInputStream());

        Datapacket GetFriendsPosts = new Datapacket();
        //GET MY FRIENDS

        GetFriendsPosts.SetCommand("GET_POSTS");
        GetFriendsPosts.SetSingleData(username);

        OutToServer.writeObject(GetFriendsPosts);

        Datapacket ServerReply = (Datapacket) FromServerStream.readObject();
        System.out.println("test");

        ArrayList<String> FriendsPosts = ServerReply.GetArray();
        ta_homePosts.setText("");

        for (int i = 0; i < FriendsPosts.size(); i++) {
//            String PostFormat = "";
//            if ("TextPost".equals(FriendsPosts.get(i).get(4))) {
//                if ("Select Mood:".equals(FriendsPosts.get(i).get(3))) {
//                    PostFormat = FriendsPosts.get(i).get(0) + " - " + FriendsPosts.get(i).get(1) + ": " + FriendsPosts.get(i).get(2) + "\n";
//                } else {
//                    PostFormat = FriendsPosts.get(i).get(0) + " - " + FriendsPosts.get(i).get(1) + ": " + FriendsPosts.get(i).get(2) + " - Feeling " + FriendsPosts.get(i).get(3) + "\n";
//                }
//            } else if ("SongUpload".equals(FriendsPosts.get(i).get(4))) {
//                PostFormat = FriendsPosts.get(i).get(0) + " - " + FriendsPosts.get(i).get(1) + " uploaded a new song: " + FriendsPosts.get(i).get(2) + "\n";
//            }
            ta_homePosts.append(FriendsPosts.get(i));
            ta_homePosts.setCaretPosition(ta_homePosts.getDocument().getLength());
        }
        OutToServer.close();
        FromServerStream.close();
    }

    public void Logout() {
        // Stops playing music on logout
        if (musicPlaying == true) {
            AudioPlayer.player.stop(audioStream);
            songTimer.stop();
        }
        //       C.SetRequest(false);
        //      D.SetRequest(false);

        //message to server to say disconnected user
        Datapacket LoggingOff = new Datapacket();

        LoggingOff.SetCommand("LOGOUT");
        LoggingOff.SetSingleData(username);

        File Pdir = new File("media/photos");
        File Mdir = new File("media/music");

        try {
            //Send the NamePass infopacket
            //Remove Files in Music and Photo Folders
            for (File file : Pdir.listFiles()) {
                if (!file.isDirectory()) {
                    file.delete();
                }
            }
            for (File file : Mdir.listFiles()) {
                if (!file.isDirectory()) {
                    file.delete();
                }
            }

            Socket MainServer = new Socket("localhost", 9090);
            ObjectOutputStream ToServerStream = new ObjectOutputStream(MainServer.getOutputStream());
            System.out.println("Made Output Stream");
            ToServerStream.writeObject(LoggingOff);

            ObjectInputStream FromServerStream = new ObjectInputStream(MainServer.getInputStream());

            //Get reply 
            Datapacket ServerReply = (Datapacket) FromServerStream.readObject();

            MainServer.close();

        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }

        Login login = new Login();
        login.setLocationRelativeTo(null);
        login.setVisible(true);

        this.dispose();
    }

    public void playSong() {
        try {

            // open the sound file as a Java input stream
            InputStream in = new FileInputStream("media/songs/converted/playSong.wav");
            // create an audiostream from the inputstream
            audioStream = new AudioStream(in);

            // play the audio clip with the audioplayer class
            AudioPlayer.player.start(audioStream);

        } catch (IOException e) {
        }
    }

    public void convertFile(String songName) {

        String songPath = "media/songs/" + songName + ".mp3";
        System.out.println(songPath);
        javazoom.jl.converter.Converter converter = new javazoom.jl.converter.Converter();
        try {
            converter.convert(songPath, "media/songs/converted/playSong.wav");
        } catch (JavaLayerException ex) {
        }

    }

    public void downloadSong(String FileName) {
        Datapacket SelectedSong = new Datapacket();
        SelectedSong.SetCommand("DOWNLOAD_SONG");
        SelectedSong.SetSingleData(FileName);

        try {
            Socket MainServer = new Socket("localhost", 9090);

            ObjectOutputStream OutToServer = new ObjectOutputStream(MainServer.getOutputStream());
            ObjectInputStream FromServerStream = new ObjectInputStream(MainServer.getInputStream());

            OutToServer.writeObject(SelectedSong);

            Datapacket ServerReply = (Datapacket) FromServerStream.readObject();

            File MusicDirectory = new File("media/songs/" + FileName + ".mp3");
            File PhotoDirectory = new File("media/photos" + FileName + ".png");

            byte[] Song = (byte[]) ServerReply.GetByteData();
            FileOutputStream SongOut = new FileOutputStream(MusicDirectory);
            SongOut.write(Song);

            byte[] CoverPhoto = (byte[]) ServerReply.GetSecondData();
            FileOutputStream PhotoOut = new FileOutputStream(PhotoDirectory);
            PhotoOut.write(CoverPhoto);

            OutToServer.close();
            FromServerStream.close();

            //Pass song name to music player form    
        } catch (IOException | ClassNotFoundException e) {
            System.out.println(e.getMessage());
        }
    }

    public ImageIcon ResizeImage(String ImagePath) {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(icon_pp.getWidth(), icon_pp.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
}
