/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nocturne;

/**
 *
 * @author Theo
 */
import datapacket.Datapacket;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

public class UploadSong extends javax.swing.JFrame {

    private String MusicFilePath;
    private String PhotoFilePath;
    private String UserName;

    public UploadSong(String username) {
        this.UserName = username;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_left = new javax.swing.JPanel();
        lbl_songName = new javax.swing.JLabel();
        txt_songName = new javax.swing.JTextField();
        seperator1 = new javax.swing.JSeparator();
        lbl_artistName = new javax.swing.JLabel();
        txt_artistName = new javax.swing.JTextField();
        seperator2 = new javax.swing.JSeparator();
        lbl_genre = new javax.swing.JLabel();
        cbx_genre = new javax.swing.JComboBox<>();
        btn_upload = new javax.swing.JButton();
        lbl_cancel = new javax.swing.JLabel();
        lbl_chosenFile = new javax.swing.JLabel();
        pnl_Right = new javax.swing.JPanel();
        icon_albumCover = new javax.swing.JLabel();
        lbl_chooseFile = new javax.swing.JLabel();
        btn_uploadWav = new javax.swing.JButton();
        lbl_chooseCover = new javax.swing.JLabel();
        ta_filePath = new javax.swing.JTextArea();
        btn_uploadCover = new javax.swing.JButton();
        seperator3 = new javax.swing.JSeparator();
        pnl_toolbar = new javax.swing.JPanel();
        icon_exit = new javax.swing.JLabel();
        lbl_title = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 153));
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(600, 330));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_left.setBackground(new java.awt.Color(7, 51, 73));
        pnl_left.setPreferredSize(new java.awt.Dimension(280, 200));

        lbl_songName.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_songName.setForeground(new java.awt.Color(57, 113, 177));
        lbl_songName.setText("Song Name:");

        txt_songName.setBackground(new java.awt.Color(7, 51, 73));
        txt_songName.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txt_songName.setForeground(new java.awt.Color(255, 255, 255));
        txt_songName.setBorder(null);
        txt_songName.setCaretColor(new java.awt.Color(255, 255, 255));

        lbl_artistName.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_artistName.setForeground(new java.awt.Color(57, 113, 177));
        lbl_artistName.setText("Artist Name:");

        txt_artistName.setBackground(new java.awt.Color(7, 51, 73));
        txt_artistName.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txt_artistName.setForeground(new java.awt.Color(255, 255, 255));
        txt_artistName.setBorder(null);
        txt_artistName.setCaretColor(new java.awt.Color(255, 255, 255));
        txt_artistName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_artistNameFocusGained(evt);
            }
        });

        lbl_genre.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_genre.setForeground(new java.awt.Color(57, 113, 177));
        lbl_genre.setText("Genre:");

        cbx_genre.setBackground(new java.awt.Color(7, 51, 73));
        cbx_genre.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cbx_genre.setForeground(new java.awt.Color(255, 255, 255));
        cbx_genre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Classical", "Funk", "Jazz", "Rock", "Dance", "Hip-Hop", "Pop", "Soul/R&B", "Folk", "Indie", "Reggae", "Techno" }));
        cbx_genre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_genreActionPerformed(evt);
            }
        });

        btn_upload.setBackground(new java.awt.Color(57, 113, 177));
        btn_upload.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_upload.setForeground(new java.awt.Color(255, 255, 255));
        btn_upload.setText("Upload");
        btn_upload.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_uploadActionPerformed(evt);
            }
        });

        lbl_cancel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_cancel.setForeground(new java.awt.Color(57, 113, 177));
        lbl_cancel.setText("or Cancel");
        lbl_cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_cancelMousePressed(evt);
            }
        });

        lbl_chosenFile.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_chosenFile.setForeground(new java.awt.Color(57, 113, 177));

        javax.swing.GroupLayout pnl_leftLayout = new javax.swing.GroupLayout(pnl_left);
        pnl_left.setLayout(pnl_leftLayout);
        pnl_leftLayout.setHorizontalGroup(
            pnl_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_leftLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_songName)
                    .addComponent(txt_artistName)
                    .addGroup(pnl_leftLayout.createSequentialGroup()
                        .addGroup(pnl_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(pnl_leftLayout.createSequentialGroup()
                                .addComponent(lbl_chosenFile)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbl_cancel))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_leftLayout.createSequentialGroup()
                                .addGroup(pnl_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_songName)
                                    .addGroup(pnl_leftLayout.createSequentialGroup()
                                        .addComponent(lbl_genre)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbx_genre, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_upload, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addComponent(lbl_artistName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seperator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seperator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnl_leftLayout.setVerticalGroup(
            pnl_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_leftLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_songName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_songName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seperator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_artistName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_artistName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seperator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(pnl_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_genre)
                    .addGroup(pnl_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbx_genre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_upload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_cancel)
                    .addComponent(lbl_chosenFile))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnl_left, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 280, 200));

        pnl_Right.setBackground(new java.awt.Color(32, 33, 35));
        pnl_Right.setPreferredSize(new java.awt.Dimension(320, 200));
        pnl_Right.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        icon_albumCover.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        pnl_Right.add(icon_albumCover, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 51, 140, 140));

        lbl_chooseFile.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_chooseFile.setForeground(new java.awt.Color(57, 113, 177));
        lbl_chooseFile.setText(".wav File");
        pnl_Right.add(lbl_chooseFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 12, -1, -1));

        btn_uploadWav.setBackground(new java.awt.Color(57, 113, 177));
        btn_uploadWav.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_uploadWav.setForeground(new java.awt.Color(255, 255, 255));
        btn_uploadWav.setText("Upload");
        btn_uploadWav.setPreferredSize(new java.awt.Dimension(250, 25));
        btn_uploadWav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_uploadWavActionPerformed(evt);
            }
        });
        pnl_Right.add(btn_uploadWav, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 11, 73, 18));

        lbl_chooseCover.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_chooseCover.setForeground(new java.awt.Color(57, 113, 177));
        lbl_chooseCover.setText("Album Cover");
        pnl_Right.add(lbl_chooseCover, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 12, -1, -1));

        ta_filePath.setBackground(new java.awt.Color(32, 33, 35));
        ta_filePath.setColumns(20);
        ta_filePath.setFont(new java.awt.Font("Futura", 0, 13)); // NOI18N
        ta_filePath.setForeground(new java.awt.Color(253, 255, 252));
        ta_filePath.setRows(5);
        ta_filePath.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnl_Right.add(ta_filePath, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 51, 140, 140));

        btn_uploadCover.setBackground(new java.awt.Color(57, 113, 177));
        btn_uploadCover.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btn_uploadCover.setForeground(new java.awt.Color(255, 255, 255));
        btn_uploadCover.setText("Upload");
        btn_uploadCover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_uploadCoverActionPerformed(evt);
            }
        });
        pnl_Right.add(btn_uploadCover, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 11, 78, 18));
        pnl_Right.add(seperator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 290, 10));

        getContentPane().add(pnl_Right, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 320, 200));

        pnl_toolbar.setBackground(new java.awt.Color(57, 113, 177));
        pnl_toolbar.setPreferredSize(new java.awt.Dimension(600, 30));
        pnl_toolbar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnl_toolbarMouseDragged(evt);
            }
        });
        pnl_toolbar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnl_toolbarMousePressed(evt);
            }
        });

        icon_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nocturne/resources/cancel.png"))); // NOI18N
        icon_exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                icon_exitMousePressed(evt);
            }
        });

        lbl_title.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        lbl_title.setForeground(new java.awt.Color(255, 255, 255));
        lbl_title.setText("Upload A Song");

        javax.swing.GroupLayout pnl_toolbarLayout = new javax.swing.GroupLayout(pnl_toolbar);
        pnl_toolbar.setLayout(pnl_toolbarLayout);
        pnl_toolbarLayout.setHorizontalGroup(
            pnl_toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_toolbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_title, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 276, Short.MAX_VALUE)
                .addComponent(icon_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnl_toolbarLayout.setVerticalGroup(
            pnl_toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_title, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
            .addComponent(icon_exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(pnl_toolbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int xx;
    int xy;
    private void pnl_toolbarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_toolbarMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_pnl_toolbarMousePressed

    private void pnl_toolbarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_toolbarMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_pnl_toolbarMouseDragged

    private void txt_artistNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_artistNameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_artistNameFocusGained

    private void btn_uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_uploadActionPerformed

        Datapacket UserSongDetails = new Datapacket();
        ArrayList UserSongArray = new ArrayList();
        UserSongArray.add(UserName);
        //Date and time added by default SQL Table
        UserSongArray.add("SongUpload");
        UserSongArray.add(txt_songName.getText());
        UserSongArray.add(txt_artistName.getText());

        UserSongArray.add(cbx_genre.getSelectedItem().toString());

        //Convert song file to byte
        FileInputStream SongFile;
        FileInputStream CoverPhotoFile;
        try {
            SongFile = new FileInputStream(MusicFilePath);
            byte[] buffer = new byte[SongFile.available()];
            SongFile.read(buffer);

            CoverPhotoFile = new FileInputStream(PhotoFilePath);
            byte[] buffer2 = new byte[CoverPhotoFile.available()];
            CoverPhotoFile.read(buffer2);

            //UNS - Upload New Song
            UserSongDetails.SetCommand("UPLOAD_SONG");
            UserSongDetails.SetArray(UserSongArray);
            UserSongDetails.SetFirstByte(buffer);
            UserSongDetails.SetSecondByte(buffer2);

            Socket MainServer = new Socket("localhost", 9090);

            ObjectOutputStream OutToServer = new ObjectOutputStream(MainServer.getOutputStream());

            OutToServer.writeObject(UserSongDetails);

            OutToServer.close();

            MainServer.close();
            ClearForm();
        } catch (FileNotFoundException ex) {
            System.out.println("Error - " + ex.getMessage());
        } catch (IOException ex) {
            System.out.println("Error - " + ex.getMessage());
        }
    }//GEN-LAST:event_btn_uploadActionPerformed

    private void btn_uploadWavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_uploadWavActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        MusicFilePath = f.getAbsolutePath();
        ta_filePath.setText(MusicFilePath);
    }//GEN-LAST:event_btn_uploadWavActionPerformed

    private void btn_uploadCoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_uploadCoverActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        PhotoFilePath = f.getAbsolutePath();
        icon_albumCover.setIcon(ResizeImage(PhotoFilePath));
    }//GEN-LAST:event_btn_uploadCoverActionPerformed

    private void lbl_cancelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_cancelMousePressed
        this.dispose();

    }//GEN-LAST:event_lbl_cancelMousePressed

    private void icon_exitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icon_exitMousePressed
        this.dispose();
    }//GEN-LAST:event_icon_exitMousePressed

    private void cbx_genreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_genreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbx_genreActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_upload;
    private javax.swing.JButton btn_uploadCover;
    private javax.swing.JButton btn_uploadWav;
    private javax.swing.JComboBox<String> cbx_genre;
    private javax.swing.JLabel icon_albumCover;
    private javax.swing.JLabel icon_exit;
    private javax.swing.JLabel lbl_artistName;
    private javax.swing.JLabel lbl_cancel;
    private javax.swing.JLabel lbl_chooseCover;
    private javax.swing.JLabel lbl_chooseFile;
    private javax.swing.JLabel lbl_chosenFile;
    private javax.swing.JLabel lbl_genre;
    private javax.swing.JLabel lbl_songName;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JPanel pnl_Right;
    private javax.swing.JPanel pnl_left;
    private javax.swing.JPanel pnl_toolbar;
    private javax.swing.JSeparator seperator1;
    private javax.swing.JSeparator seperator2;
    private javax.swing.JSeparator seperator3;
    private javax.swing.JTextArea ta_filePath;
    private javax.swing.JTextField txt_artistName;
    private javax.swing.JTextField txt_songName;
    // End of variables declaration//GEN-END:variables

    public void ClearForm() {
        txt_artistName.setText("");
        txt_songName.setText("");
        cbx_genre.setSelectedIndex(0);
        icon_albumCover.setIcon(ResizeImage(""));
        lbl_chosenFile.setText("");
    }

    public ImageIcon ResizeImage(String ImagePath) {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(icon_albumCover.getWidth(), icon_albumCover.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
}
